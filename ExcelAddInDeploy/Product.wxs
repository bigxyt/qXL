<?xml version="1.0" encoding="utf-8"?>
<?define ProductName = "exxeleron qXL" ?>
<?define ShortName = "qXL" ?>
<?define ProductVersion = "$(var.VersionMajor).$(var.VersionMinor).$(var.VersionRevision).$(var.VersionBuild)"?>
<?define ProductVersionShort = "$(var.VersionMajor).$(var.VersionMinor).$(var.VersionRevision)"?>
<?define ProductUpgradeCode = "{5164509C-933C-4F69-B9F2-12012F015504}"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">
  <Product Id="*" Name="$(var.ProductName)$(var.VersionType) $(var.ProductVersionShort)"
           Language="1033"
           Version="$(var.ProductVersion)"
           Manufacturer="exxeleron GmbH"
           UpgradeCode="$(var.ProductUpgradeCode)">
    <Package InstallerVersion="200"
             Compressed="yes"
             InstallPrivileges="elevated"
             InstallScope="perUser"
             Manufacturer="exxeleron GmbH"
             Description="$(var.ProductName)$(var.VersionType) $(var.ProductVersionShort) installer"
             Comments="© 2014 exxeleron GmbH" />
    <MediaTemplate EmbedCab="yes" />

    <Property Id="PREVIOUSVERSIONSINSTALLED" Secure="yes" />
    <Upgrade Id="$(var.ProductUpgradeCode)">
      <UpgradeVersion
        Minimum="1.0.0.0" Maximum="99.0.0.0"
        Property="PREVIOUSVERSIONSINSTALLED"
        IncludeMinimum="yes" IncludeMaximum="no" />
    </Upgrade>

    <WixVariable Id="WixUIBannerBmp" Value="Resources\Banner.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="Resources\Dialog.jpg" />
    <WixVariable Id="WixUILicenseRtf" Value="Resources\LICENSE.rtf" />

    <!-- Windows Installer set TARGETDIR to the local hard drive with the most free space.  The top-level Directory must be Id="TARGETDIR" Name="SourceDir" -->
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="AppDataFolder">
        <Directory Id="Microsoft" Name="Microsoft">
          <Directory Id="AddInsDir" Name="AddIns" />
        </Directory>
      </Directory>

      <Directory Id="PersonalFolder">
        <Directory Id="INSTALLDIR" Name="$(var.ProductName) Examples" />
      </Directory>

      <Directory Id="ProgramMenuFolder" Name="Programs">
        <Directory Id="ExamplesProgramsFolder" Name="$(var.ProductName) Examples" />
      </Directory>
    </Directory>

    <!-- 
    Components always have unique GUIDs so that Windows can track every file installed. This information is stored in the registry.
    Components should only contain a single file. KeyPath files will be replaced if missing by the repair button on the installer.
    -->
    <ComponentGroup Id="XLLDistributables">
      <Component Id="XLL32" Guid="{9921255F-1E52-4509-AFBA-F3841D3E6D3E}" Directory="AddInsDir">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="Xll32Bit" Value="1"
                       KeyPath="yes" Type="integer" />
        <File Id="QXL.XLL" Name="qXL.xll" Source="$(var.SolutionDir)qXL\bin\Release\qXL.xll">
          <netfx:NativeImage Id="ngen_32Xll" Platform="32bit" Priority="0" />
        </File>
        <RemoveFile On="uninstall" Id="XLL32" Directory="AddInsDir" Name="qXL.xll" />
      </Component>

      <Component Id="XLL64" Guid="{8F571C13-4BEC-4061-A070-AB4FC87546A2}" Directory="AddInsDir">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="Xll64Bit" Value="1"
                       KeyPath="yes" Type="integer" />
        <File Id="QXL64.XLL" Name="qXL64.xll" Source="$(var.SolutionDir)qXL\bin\Release\qXL64.xll">
          <netfx:NativeImage Id="ngen_64Xll" Platform="64bit" Priority="0" />
        </File>
        <RemoveFile On="uninstall" Id="XLL64" Directory="AddInsDir" Name="qXL64.xll" />
      </Component>

      <Component Id="AddInsDir" Guid="{E2FEDD7E-AD3C-44AE-9B1A-E5174B999806}" Directory="AddInsDir">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="AddIns" Value="1" KeyPath="yes"
                       Type="integer" />
        <RemoveFolder Id="AddInsDir" Directory="AddInsDir" On="uninstall" />
        <RemoveFolder Id="Microsoft" Directory="Microsoft" On="uninstall" />
      </Component>
    </ComponentGroup>

    <ComponentGroup Id="qXLExamples">
      <Component Id="WorksheetExamplesXLSX" Guid="{D706B528-5C56-48D4-8422-03FCB775BFC0}" Directory="INSTALLDIR">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="WorksheetExamplesXLSX"
                       Value="1" KeyPath="yes" Type="integer" />
        <File Source="$(var.SolutionDir)doc\examples\Worksheet-Examples.xlsx">
          <Shortcut Id="WorksheetExamplesXLSXShortcut" Directory="ExamplesProgramsFolder" Name="Worksheet Examples"
                    WorkingDirectory="INSTALLDIR" />
        </File>
        <RemoveFile On="uninstall" Id="WorksheetExamplesXLSX" Directory="INSTALLDIR" Name="WorksheetExamples.xlsx" />
      </Component>

      <Component Id="RTDExamplesXLSM" Guid="{728AEC7B-481C-4EE4-98F1-DA04402DF4FA}" Directory="INSTALLDIR">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="RTDExamplesXLSM" Value="1"
                       KeyPath="yes" Type="integer" />
        <File Source="$(var.SolutionDir)doc\examples\RTD-Examples.xlsm">
          <Shortcut Id="RTDExamplesXLSMShortcut" Directory="ExamplesProgramsFolder" Name="RTD Example"
                    WorkingDirectory="INSTALLDIR" />
        </File>
        <RemoveFile On="uninstall" Id="RTDExamplesXLSM" Directory="INSTALLDIR" Name="RTD-Examples.xlsm" />
      </Component>

      <Component Id="VBAExamplesXLSM" Guid="{941FC9F4-8FED-47B1-9A87-744130687429}" Directory="INSTALLDIR">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="VBAExamplesXLSM" Value="1"
                       KeyPath="yes" Type="integer" />
        <File Source="$(var.SolutionDir)doc\examples\VBA-Examples.xlsm">
          <Shortcut Id="VBAExamplesXLSMShortcut" Directory="ExamplesProgramsFolder" Name="VBA Examples"
                    WorkingDirectory="INSTALLDIR" />
        </File>
        <RemoveFile On="uninstall" Id="VBAExamplesXLSM" Directory="INSTALLDIR" Name="VBA-Examples.xlsm" />
      </Component>

      <Component Id="ExamplesDir" Guid="{B08E66E4-7B6B-4653-8208-664FD4208B21}" Directory="INSTALLDIR">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="ExamplesDir" Value="1"
                       KeyPath="yes" Type="integer" />
        <RemoveFolder On="uninstall" Id="INSTALLDIR" Directory="INSTALLDIR" />
      </Component>

      <Component Id="ExamplesShortcutsDir" Guid="*" Directory="ExamplesProgramsFolder">
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ShortName)" Name="ExamplesShortcutsDir" Value="1"
                       KeyPath="yes" Type="integer" />
        <RemoveFolder On="uninstall" Id="ExamplesProgramsFolder" Directory="ExamplesProgramsFolder" />
      </Component>
    </ComponentGroup>

    <Feature Id="ExcelAddIn" Title="qXL Excel AddIn" Description="Excel and kdb+ integration" Level="1"
             AllowAdvertise="yes" Absent="disallow">
      <ComponentGroupRef Id="XLLDistributables" />
    </Feature>

    <Feature Id="Examples" Title="qXL Examples" Description="Samples demonstrating Excel integration with kdb+"
             Level="1" AllowAdvertise="yes" ConfigurableDirectory='INSTALLDIR'>
      <ComponentGroupRef Id="qXLExamples" />
    </Feature>

    <PropertyRef Id="NETFRAMEWORK40CLIENT" />
    <Condition Message="[ProductName] requires .NET Framework 4.0.x to be installed.">Installed OR NETFRAMEWORK40CLIENT</Condition>

    <!-- See http://wix.sourceforge.net/manual-wix3/WixUI_index.htm for more information-->
    <UI Id="WixUI_FeatureTree">
      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="11" />
      <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" Red="255" Green="255" Blue="255" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode" Value="FeatureTree" />

      <DialogRef Id="BrowseDlg" />
      <DialogRef Id="DiskCostDlg" />
      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg" />
      <DialogRef Id="ProgressDlg" />
      <DialogRef Id="ResumeDlg" />
      <DialogRef Id="UserExit" />
      <DialogRef Id="CustomizeDlg" />

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="CustomizeDlg">LicenseAccepted = "1"</Publish>

      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">NOT Installed</Publish>
      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg">Installed</Publish>
      <Publish Dialog="CustomizeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="CustomizeDlg" Order="1">NOT Installed</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="1">Installed</Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton" Event="NewDialog" Value="CustomizeDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>
    </UI>

    <UIRef Id="WixUI_Common" />

    <Icon Id="Icon.ico" SourceFile="Resources\Icon.ico" />
    <Property Id="ARPPRODUCTICON" Value="Icon.ico"></Property>

    <!--IMPORTANT ALL MS OFFICE SUPPORTED VERSIONS ARE HERE: Office 2003, 2007, 2010, 2013 Keep it uptodate-->
    <!-- these numbers will be parsed individually in the custom actions with InvariantCulture and NumberStyles.Any -->
    <Property Id="OFFICEREGKEYS" Value="11.0,12.0,14.0,15.0" />
    <Property Id="XLL32" Value="qXL.xll" />
    <Property Id="XLL64" Value="qXL64.xll" />

    <!-- The property below will disable the repair button. -->
    <!--<Property Id="ARPNOREPAIR" Value="yes" />-->
    <Property Id="PromptToCloseProcesses" Value="EXCEL" />
    <Property Id="PromptToCloseDisplayNames" Value="Microsoft Excel" />

    <!--
    To handle registering the XLL, a custom action project must be created and a project reference must be created. 
    This project will create a DLL that WiX can understand.
    The binary refers to the dll created by the custom action project.
    If values are to be passed to the custom action project, the set property actions must precede the action specifying the DLL entry point.
    The InstallExecuteSequence specifies the sequence to run the actions and the AdminExecuteSequence provide rights to non-admin users (to the registry).
    For more information on custom actions, read
    http://www.codeproject.com/Articles/132918/Creating-Custom-Action-for-WIX-Written-in-Managed?fid=1599130&df=90&mpp=25&noise=3&prof=False&sort=Position&view=Quick&spc=Relaxed&select=4131367&fr=1#xx0xx
    -->
    <Binary Id="InstallerCA.CA.dll" SourceFile="..\InstallerCA\bin\Release\InstallerCA.CA.dll" />
    <CustomAction Id="Action_RegisterAddIn.SetProperty" Return="check" Property="Action_RegisterAddIn"
                  Value="OFFICEREGKEYS=[OFFICEREGKEYS];XLL32=[XLL32];XLL64=[XLL64]" />
    <CustomAction Id="Action_RegisterAddIn" BinaryKey="InstallerCA.CA.dll" DllEntry="CaRegisterAddIn" Return="check"
                  Execute="immediate">
    </CustomAction>
    <CustomAction Id="Action_UnRegisterAddIn.SetProperty" Return="check" Property="Action_UnRegisterAddIn"
                  Value="OFFICEREGKEYS=[OFFICEREGKEYS];XLL32=[XLL32];XLL64=[XLL64]" />
    <CustomAction Id="Action_UnRegisterAddIn" BinaryKey="InstallerCA.CA.dll" DllEntry="CaUnRegisterAddIn"
                  Return="check" Execute="immediate" />
    <CustomAction Id="Action_CloseAppsPrompt" BinaryKey="InstallerCA.CA.dll" DllEntry="ClosePrompt" Return="check" />
    <InstallExecuteSequence>
      <Custom Action="Action_CloseAppsPrompt" After="Action_RegisterAddIn.SetProperty" />
      <Custom Action="Action_RegisterAddIn.SetProperty" Before="Action_RegisterAddIn">NOT Installed</Custom>
      <Custom Action="Action_RegisterAddIn" Before="InstallFinalize">NOT Installed</Custom>
      <Custom Action="Action_UnRegisterAddIn.SetProperty" Before="Action_UnRegisterAddIn">Installed AND NOT UPGRADINGPRODUCTCODE</Custom>
      <Custom Action="Action_UnRegisterAddIn" Before="InstallFinalize">Installed AND NOT UPGRADINGPRODUCTCODE</Custom>
      <RemoveExistingProducts Before="InstallInitialize" />
    </InstallExecuteSequence>
    <AdminExecuteSequence>
      <Custom Action="Action_CloseAppsPrompt" After="Action_RegisterAddIn.SetProperty" />
      <Custom Action="Action_RegisterAddIn.SetProperty" Before="InstallFinalize">NOT Installed</Custom>
      <Custom Action="Action_RegisterAddIn" After="Action_RegisterAddIn.SetProperty">NOT Installed</Custom>
      <Custom Action="Action_UnRegisterAddIn.SetProperty" Before="InstallFinalize">Installed AND NOT UPGRADINGPRODUCTCODE</Custom>
      <Custom Action="Action_UnRegisterAddIn" After="Action_UnRegisterAddIn.SetProperty">Installed AND NOT UPGRADINGPRODUCTCODE</Custom>
    </AdminExecuteSequence>

  </Product>
</Wix>